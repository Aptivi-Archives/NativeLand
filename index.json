{
  "api/NativeLand.Exceptions.NoBinaryForPlatformException.html": {
    "href": "api/NativeLand.Exceptions.NoBinaryForPlatformException.html",
    "title": "Class NoBinaryForPlatformException | NativeLand API - Aptivi",
    "keywords": "Class NoBinaryForPlatformException Thrown when there is no binary for current platform and bitness. Inheritance object Exception NoBinaryForPlatformException Namespace: NativeLand.Exceptions Assembly: NativeLand.dll Syntax public class NoBinaryForPlatformException : Exception Constructors | Edit this page View Source NoBinaryForPlatformException() Declaration public NoBinaryForPlatformException() | Edit this page View Source NoBinaryForPlatformException(string) Declaration public NoBinaryForPlatformException(string message) Parameters Type Name Description string message | Edit this page View Source NoBinaryForPlatformException(string, Exception) Declaration public NoBinaryForPlatformException(string message, Exception innerException) Parameters Type Name Description string message Exception innerException"
  },
  "api/NativeLand.Exceptions.UnsupportedPlatformException.html": {
    "href": "api/NativeLand.Exceptions.UnsupportedPlatformException.html",
    "title": "Class UnsupportedPlatformException | NativeLand API - Aptivi",
    "keywords": "Class UnsupportedPlatformException Thrown when platform is not supported. Inheritance object Exception UnsupportedPlatformException Namespace: NativeLand.Exceptions Assembly: NativeLand.dll Syntax public class UnsupportedPlatformException : Exception Constructors | Edit this page View Source UnsupportedPlatformException() Declaration public UnsupportedPlatformException() | Edit this page View Source UnsupportedPlatformException(string) Declaration public UnsupportedPlatformException(string message) Parameters Type Name Description string message | Edit this page View Source UnsupportedPlatformException(string, Exception) Declaration public UnsupportedPlatformException(string message, Exception innerException) Parameters Type Name Description string message Exception innerException"
  },
  "api/NativeLand.Exceptions.html": {
    "href": "api/NativeLand.Exceptions.html",
    "title": "Namespace NativeLand.Exceptions | NativeLand API - Aptivi",
    "keywords": "Namespace NativeLand.Exceptions Classes NoBinaryForPlatformException Thrown when there is no binary for current platform and bitness. UnsupportedPlatformException Thrown when platform is not supported."
  },
  "api/NativeLand.LibraryFile.html": {
    "href": "api/NativeLand.LibraryFile.html",
    "title": "Class LibraryFile | NativeLand API - Aptivi",
    "keywords": "Class LibraryFile A class to store the information about native library file. Inheritance object LibraryFile Namespace: NativeLand Assembly: NativeLand.dll Syntax public class LibraryFile Constructors | Edit this page View Source LibraryFile(string, byte[]) Makes a new instance of this class Declaration public LibraryFile(string fileName, byte[] resource) Parameters Type Name Description string fileName Filename to use when extracting the library. byte[] resource Library binary. Properties | Edit this page View Source CanLoadExplicitly Specifies whether this file is a shared library, which can be loaded explicitly with LoadLibraryEx on Windows and dlopen on Linux and MacOs. Default is True , but explicit loading is disabled by default with LoadLibraryExplicit. Set this to False if this file is not a library, but a supporting file which shouldn't be loaded explicitly when LoadLibraryExplicit is True . Declaration public bool CanLoadExplicitly { get; set; } Property Value Type Description bool | Edit this page View Source FileName Filename to use when extracting the library. Declaration public string FileName { get; set; } Property Value Type Description string | Edit this page View Source Resource Library binary. Declaration public byte[] Resource { get; set; } Property Value Type Description byte[]"
  },
  "api/NativeLand.LibraryItem.html": {
    "href": "api/NativeLand.LibraryItem.html",
    "title": "Class LibraryItem | NativeLand API - Aptivi",
    "keywords": "Class LibraryItem Library binaries for specified platform and bitness. Inheritance object LibraryItem Namespace: NativeLand Assembly: NativeLand.dll Syntax public class LibraryItem Constructors | Edit this page View Source LibraryItem(Platform, Architecture, params LibraryFile[]) Makes a new instance of this class Declaration public LibraryItem(Platform platform, Architecture bitness, params LibraryFile[] files) Parameters Type Name Description Platform platform Binary platform. Architecture bitness Binary bitness. LibraryFile[] files A collection of files for this bitness and platform. Properties | Edit this page View Source Bitness Bitness for which this binary is used. Declaration public Architecture Bitness { get; set; } Property Value Type Description Architecture | Edit this page View Source Files Library files. Declaration public LibraryFile[] Files { get; set; } Property Value Type Description LibraryFile[] | Edit this page View Source Platform Platform for which this binary is used. Declaration public Platform Platform { get; set; } Property Value Type Description Platform Methods | Edit this page View Source LoadItem(string, bool) Unpacks the library and directly loads it if on Windows. Declaration public virtual void LoadItem(string targetDirectory, bool loadLibrary) Parameters Type Name Description string targetDirectory Target directory to which library is extracted. bool loadLibrary Load library explicitly."
  },
  "api/NativeLand.LibraryManager.html": {
    "href": "api/NativeLand.LibraryManager.html",
    "title": "Class LibraryManager | NativeLand API - Aptivi",
    "keywords": "Class LibraryManager A class to manage, extract and load native implementations of dependent libraries. Inheritance object LibraryManager Namespace: NativeLand Assembly: NativeLand.dll Syntax public class LibraryManager Constructors | Edit this page View Source LibraryManager(ILoggerFactory, params LibraryItem[]) Creates a new library manager which extracts to environment current directory by default. Declaration public LibraryManager(ILoggerFactory loggerFactory, params LibraryItem[] items) Parameters Type Name Description ILoggerFactory loggerFactory Logger factory. LibraryItem[] items Library binaries for different platforms. | Edit this page View Source LibraryManager(params LibraryItem[]) Creates a new library manager which extracts to environment current directory by default. Declaration public LibraryManager(params LibraryItem[] items) Parameters Type Name Description LibraryItem[] items Library binaries for different platforms. | Edit this page View Source LibraryManager(string, ILoggerFactory, params LibraryItem[]) Creates a new library manager which extracts to a custom directory. IMPORTANT! Be sure this directory is discoverable by system library loader. Otherwise, your library won't be loaded. Declaration public LibraryManager(string targetDirectory, ILoggerFactory loggerFactory, params LibraryItem[] items) Parameters Type Name Description string targetDirectory Target directory to extract the libraries. ILoggerFactory loggerFactory Logger factory. LibraryItem[] items Library binaries for different platforms. Properties | Edit this page View Source LoadLibraryExplicit Defines whether shared libraries will be loaded explicitly. LoadLibraryEx is used on Windows and dlopen is used on Linux and MacOs to load libraries explicitly. WARNING! Explicit library loading on MacOs IS USELESS, and your P/Invoke call will fail unless library path is discoverable by system library loader. Declaration public bool LoadLibraryExplicit { get; set; } Property Value Type Description bool | Edit this page View Source TargetDirectory Target directory to which native libraries will be extracted. Defaults to directory in which targetAssembly, passed to LibraryManager constructor, resides. Declaration public string TargetDirectory { get; } Property Value Type Description string Methods | Edit this page View Source FindItem() Finds a library item based on current platform and bitness. Declaration public LibraryItem FindItem() Returns Type Description LibraryItem Library item based on platform and bitness. Exceptions Type Condition NoBinaryForPlatformException | Edit this page View Source GetPlatform() Gets the platform type. Declaration public static Platform GetPlatform() Returns Type Description Platform Exceptions Type Condition UnsupportedPlatformException Thrown when platform is not supported. | Edit this page View Source LoadNativeLibrary() Extract and load native library based on current platform and process bitness. Throws an exception if current platform is not supported. Declaration public void LoadNativeLibrary() | Edit this page View Source LoadNativeLibrary(bool) Extract and load native library based on current platform and process bitness. Throws an exception if current platform is not supported. Declaration [Obsolete(\"This method is obsolete. Use LoadLibraryExplicit property.\")] public void LoadNativeLibrary(bool loadLibrary) Parameters Type Name Description bool loadLibrary Use LoadLibrary API call on Windows to explicitly load library into the process."
  },
  "api/NativeLand.Tools.PathHelper.html": {
    "href": "api/NativeLand.Tools.PathHelper.html",
    "title": "Class PathHelper | NativeLand API - Aptivi",
    "keywords": "Class PathHelper Contains useful functions to get paths relative to target assembly. Inheritance object PathHelper Namespace: NativeLand.Tools Assembly: NativeLand.dll Syntax public static class PathHelper Methods | Edit this page View Source CombineWithCurrentDirectory(Assembly, string) Combines part of the path with assembly's directory. Declaration public static string CombineWithCurrentDirectory(this Assembly targetAssembly, string fileName) Parameters Type Name Description Assembly targetAssembly Assembly to get directory from. string fileName Right-hand part of the path. Returns Type Description string | Edit this page View Source GetCurrentDirectory(Assembly) Gets the directory specified assembly is located in. If the assembly was loaded from memory, returns environment working directory. Declaration public static string GetCurrentDirectory(this Assembly targetAssembly) Parameters Type Name Description Assembly targetAssembly Assembly to get the directory from. Returns Type Description string"
  },
  "api/NativeLand.Tools.Platform.html": {
    "href": "api/NativeLand.Tools.Platform.html",
    "title": "Enum Platform | NativeLand API - Aptivi",
    "keywords": "Enum Platform Platform (operating system). Namespace: NativeLand.Tools Assembly: NativeLand.dll Syntax public enum Platform Fields Name Description Linux Linux platform. MacOS MacOS platform. Windows Windows platform."
  },
  "api/NativeLand.Tools.ResourceAccessor.html": {
    "href": "api/NativeLand.Tools.ResourceAccessor.html",
    "title": "Class ResourceAccessor | NativeLand API - Aptivi",
    "keywords": "Class ResourceAccessor A helper class to load resources from an assembly. Inheritance object ResourceAccessor Namespace: NativeLand.Tools Assembly: NativeLand.dll Syntax public class ResourceAccessor Constructors | Edit this page View Source ResourceAccessor(Assembly) Creates a resource accessor for the specified assembly. Declaration public ResourceAccessor(Assembly assembly) Parameters Type Name Description Assembly assembly Methods | Edit this page View Source Binary(string) Gets a resource with specified name as an array of bytes. Declaration public byte[] Binary(string name) Parameters Type Name Description string name Resource name with folders separated by dots. Returns Type Description byte[] Exceptions Type Condition InvalidOperationException When resource is not found."
  },
  "api/NativeLand.Tools.html": {
    "href": "api/NativeLand.Tools.html",
    "title": "Namespace NativeLand.Tools | NativeLand API - Aptivi",
    "keywords": "Namespace NativeLand.Tools Classes PathHelper Contains useful functions to get paths relative to target assembly. ResourceAccessor A helper class to load resources from an assembly. Enums Platform Platform (operating system)."
  },
  "api/NativeLand.html": {
    "href": "api/NativeLand.html",
    "title": "Namespace NativeLand | NativeLand API - Aptivi",
    "keywords": "Namespace NativeLand Classes LibraryFile A class to store the information about native library file. LibraryItem Library binaries for specified platform and bitness. LibraryManager A class to manage, extract and load native implementations of dependent libraries."
  },
  "index.html": {
    "href": "index.html",
    "title": "| NativeLand API - Aptivi",
    "keywords": "What is NativeLand? NativeLand is a C# library that allows you to load native libraries. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of NativeLand, you may refer to the releases page of the project and download the attached <version>-doc.rar file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request; we don't support override files that are made by clicking on Improve this doc. Any meaningful contributions are welcome. Copyright (c) 2022 Aptivi. All rights reserved."
  }
}